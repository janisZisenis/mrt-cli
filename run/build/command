#!/usr/bin/env bash

set -e

rootDir=$1
shift

help(){
  dir=$(dirname "$0")
  commandName=${dir##*/}

  printf 'Pass in a list of platforms you want to build a binary for like shown below.\n'
  printf '\n'
  printf '\tmrt run %s "darwin/arm64" "linux/amd64"\n' "$commandName"
  printf '\n'
  printf "Without any parameters it will build for your machine's platform: %s.\n" "$("$rootDir"/mrt run detect-platform)"
}

build_binary() {
  platform=$1

  binaryLocation="$("$rootDir/mrt" run binary-location "$platform")"
  GOOS="${platform%/*}"
  GOARCH="${platform#*/}"

  currentDir=$PWD
  cd "$rootDir"/app

  echo "Building for $platform..."
  if ! env GOOS="$GOOS" GOARCH="$GOARCH" go build -o "$binaryLocation" .
  then
    echo "Error occurred while building for ${platform}"
    exit 1
  else
    echo "Successfully build for ${platform}"
  fi

  cd $currentDir
}

installToBuildFolder() {
  binaryLocation=$("$rootDir"/mrt run binary-location "$("$rootDir/mrt" run detect-platform)")
  cp "$binaryLocation" "$("$rootDir/mrt" run build-location)/mrt"
}

case $1 in
  --help|-h)
    help;
    exit 1
    ;;
esac

if [ "$#" -eq 0 ]
then
  platforms=("$("$rootDir/mrt" run detect-platform)")
else
  platforms=("$@")
fi

for platform in "${platforms[@]}"
do
  build_binary "$platform"
done

if [[ "${platforms[*]}" =~ $("$rootDir/mrt" run detect-platform) ]]; then
    installToBuildFolder
fi

