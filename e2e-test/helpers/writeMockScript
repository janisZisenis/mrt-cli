#!/bin/bash

load 'helpers/fileAssertions'

spyFileSuffix() {
  echo "Executed"
}

writeSpyScript() {
  local additionalScriptPath
  additionalScriptPath=$1

  mkdir -p "$(dirname "$additionalScriptPath")"
  local scriptName
  scriptName="$(basename "$additionalScriptPath")"

cat << EOF > "$additionalScriptPath"
#!/bin/bash

SCRIPT_DIR="\$( cd "\$( dirname "\${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
echo "\$@" > "\$SCRIPT_DIR/$scriptName$(spyFileSuffix)"

EOF

  chmod +x "$additionalScriptPath"
}

writeStubScript() {
  local additionalScriptPath=$1
  local exitCode=$2
  local output=$3

  mkdir -p "$(dirname "$additionalScriptPath")"
  local scriptName
  scriptName="$(basename "$additionalScriptPath")"

cat << EOF > "$additionalScriptPath"
#!/bin/bash

echo "$output"
exit $exitCode
EOF

  chmod +x "$additionalScriptPath"
}

writeScriptRequestingInput() {
  local additionalScriptPath=$1

  mkdir -p "$(dirname "$additionalScriptPath")"
  local scriptName
  scriptName="$(basename "$additionalScriptPath")"

cat << EOF > "$additionalScriptPath"
#!/bin/bash

SCRIPT_DIR="\$( cd "\$( dirname "\${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
read -r input
touch "\$SCRIPT_DIR/\$input"
EOF

  chmod +x "$additionalScriptPath"
}

writeStdErrScript() {
  local additionalScriptPath=$1
  local errorMessage=$2

  mkdir -p "$(dirname "$additionalScriptPath")"
  local scriptName
  scriptName="$(basename "$additionalScriptPath")"

cat << EOF > "$additionalScriptPath"
#!/bin/bash

echo "$errorMessage" 1>&2
EOF

  chmod +x "$additionalScriptPath"
}

assert_spy_file_has_content() {
  spyFile=$1$(spyFileSuffix)
  expectedContent=$2

  actualContent="$(cat "$spyFile")"

  assert_equal "$actualContent" "$expectedContent"
}

assert_spy_file_exists() {
  assert_file_exists "$1$(spyFileSuffix)"
}

assert_spy_file_does_not_exist() {
  assert_file_does_not_exist "$1$(spyFileSuffix)"
}