name: Run E2E Tests

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: 
          - {
            name: linux/amd64,
            os: ubuntu-latest,
            binary-path: build/bin,
            binary-name: mrt-linux-amd64
          }
          - {
              name: darwin/arm64,
              os: macos-latest,
              binary-path: build/bin,
              binary-name: mrt-darwin-arm64
            }
    steps:
      - uses: actions/checkout@v4
      - name: Setup mrt
        run: | 
          $(pwd)/bin/github/package/setup.sh
          echo "$(pwd)/bin/github" >> $GITHUB_PATH
      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@v5
        with:
          go-version-file: app/go.mod
      - name: Build binary
        run: |
          command="mrt run build -- --commit-sha ${{ github.sha }} ${{ matrix.platform.name }}"
          if [[ ${{ github.ref }} == 'refs/tags/' ]]
          then
            command+=" --semver ${{ github.ref_name }}"
          fi
          $command
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.binary-name }}
          path: ${{ matrix.platform.binary-path }}
          retention-days: 7
  run-tests:
    runs-on: ${{ matrix.platform.os }}
    needs: [build]
    strategy:
      matrix:
        platform: 
          - {
              name: linux/amd64,
              os: ubuntu-latest,
              binary-path: build/bin,
              binary-name: mrt-linux-amd64
            }
          - {
              name: darwin/arm64,
              os: macos-latest,
              binary-path: build/bin,
              binary-name: mrt-darwin-arm64
            }
    steps:
      - uses: actions/checkout@v4
      - name: Setup mrt
        run: |
          $(pwd)/bin/github/package/setup.sh
          echo "$(pwd)/bin/github" >> $GITHUB_PATH
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.platform.binary-name }}
          path: ${{ matrix.platform.binary-path }}
      - name: Make binary executable
        run: chmod 755 ${{ matrix.platform.binary-path }}/${{ matrix.platform.binary-name }}
      - name: Setup git config
        run: |
          git config --global user.email "ci@multi-repository-tool.com"
          git config --global user.name "MRT-CI-User"
      - name: Setup ssh
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" > .ssh/private-key
          chmod 400 ./.ssh/private-key
          mkdir -p $HOME/.ssh
          sed "s*WORKSPACE_DIR*$GITHUB_WORKSPACE*g" .ssh/config > $HOME/.ssh/config
          cat $HOME/.ssh/config
      - name: Run E2E Tests
        run: |
          /usr/bin/env bash --version
          mrt run e2e-tests
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: 
          - {
            name: linux/amd64,
            os: ubuntu-latest,
            binary-path: build/bin,
            binary-name: mrt-linux-amd64
          }
          - {
              name: darwin/arm64,
              os: macos-latest,
              binary-path: build/bin,
              binary-name: mrt-darwin-arm64
            }
    needs: [run-tests]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup mrt
        run: | 
          $(pwd)/bin/github/package/setup.sh
          echo "$(pwd)/bin/github" >> $GITHUB_PATH
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.platform.binary-name }}
          path: ${{ matrix.platform.binary-path }}
      - name: Make binary executable
        run: chmod 755 ${{ matrix.platform.binary-path }}/${{ matrix.platform.binary-name }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: ""
          draft: false
          prerelease: false
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.platform.binary-path }}/${{ matrix.platform.binary-name }}
          asset_name: ${{ matrix.platform.binary-name }}
          asset_content_type: application/octet-stream
  