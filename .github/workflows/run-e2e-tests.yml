name: Run E2E Tests

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  workflow_dispatch: 

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      build-matrix: ${{ steps.set-build-matrix.outputs.build-matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-build-matrix
        uses: ./.github/actions/set-build-matrix
  lint-bash:
    name: Lint Bash Scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-mrt
      - uses: ./.github/actions/setup-shell-utilities
      - name: Run bash linting
        run: mrt run lint-bash
  format-bash:
    name: Check Bash Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-mrt
      - uses: ./.github/actions/setup-shell-utilities
      - name: Check bash formatting
        run: mrt run format-bash -- --check-only
  lint-go:
    name: Lint go files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-mrt
      - uses: ./.github/actions/setup-go-utilities
      - name: Run bash linting
        run: mrt run lint-go
#  format-go:
#    name: Format go files
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/setup-mrt
#      - uses: ./.github/actions/setup-go-utilities
#      - name: Run bash formatting
#        run: mrt run format-go
  build:
    name: Build for Platform ${{ matrix.platform }}
    runs-on: ubuntu-latest
    needs: build-matrix
    strategy:
      matrix: 
        platform: ${{ fromJson(needs.build-matrix.outputs.build-matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build
        with:
          platform: ${{ matrix.platform }}
          commit-sha: ${{ github.sha }}
          version: ${{ github.ref_name }}
  run-linux-tests:
    name: Run tests on linux
    runs-on: ubuntu-latest
    needs: [build, lint-bash, format-bash]
    env:
      binary-path: build/bin
      binary-name: mrt-linux-amd64
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run-tests
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
  run-darwin-tests:
    name: Run tests on darwin
    runs-on: macos-15
    needs: [build, lint-bash, format-bash]
    env:
      binary-path: build/bin
      binary-name: mrt-darwin-arm64
    steps:
      - uses: actions/checkout@v4
      - name: Setup parallel
        shell: bash
        run: brew install parallel
      - name: Setup bash
        shell: bash
        run: brew install bash
      - uses: ./.github/actions/run-tests
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
  create-release:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: [run-linux-tests, run-darwin-tests]
    outputs:
      upload-url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: ""
          draft: false
          prerelease: false
  release-binaries:
    name: Release binaries for ${{ matrix.platform }}
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: [ create-release, build-matrix ]
    strategy:
      matrix:
        platform: ${{ fromJson(needs.build-matrix.outputs.build-matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/upload-binaries
        with:
          platform: ${{ matrix.platform }}
          upload-url: ${{ needs.create-release.outputs.upload-url }}
          github-token: ${{ secrets.RELEASE_GITHUB_TOKEN }}