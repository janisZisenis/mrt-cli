name: Run E2E Tests

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  workflow_dispatch: 

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      build-matrix: ${{ steps.set-matrix.outputs.build-matrix }}
      test-matrix: ${{ steps.set-matrix.outputs.test-matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-mrt
      - name: Generate matrix
        id: set-matrix
        run: |
          echo "build-matrix=$(mrt run build-matrix)" >> $GITHUB_OUTPUT
          echo "test-matrix=$(mrt run test-matrix)" >> $GITHUB_OUTPUT
  build:
    name: Build for Platform ${{ matrix.platform.name }}
    runs-on: ubuntu-latest
    needs: build-matrix
    strategy:
      matrix: ${{ fromJson(needs.build-matrix.outputs.build-matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build
        with:
          platform: ${{ matrix.platform.name }}
          binary-name: ${{ matrix.platform.binary-name }}
          binary-path: ${{ matrix.platform.binary-path }}
          commit-sha: ${{ github.sha }}
          version: ${{ github.ref_name }}
  run-linux-tests:
    name: Run tests for platform ${{ matrix.platform.name }}
    runs-on: ubuntu-latest
    needs: [build, build-matrix]
    strategy:
      matrix: ${{ fromJson(needs.build-matrix.outputs.test-matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/run-docker-tests
        with:
          platform: ${{ matrix.platform.name }}
          binary-name: ${{ matrix.platform.binary-name }}
          binary-path: ${{ matrix.platform.binary-path }}
          private-key: ${{ secrets.PRIVATE_KEY }}
  run-darwin-tests:
    name: Run tests on macos
    runs-on: macos-15
    needs: [build]
    env:
      platform: darwin/arm64
      binary-path: build/bin
      binary-name: mrt-darwin-arm64
    steps:
      - uses: actions/checkout@v4
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.binary-name }}
          path: ${{ env.binary-path }}
      - name: Make binary executable
        shell: bash
        run: chmod 755 ${{ env.binary-path }}/${{ env.binary-name }}
      - name: Setup ssh
        shell: bash
        run: |
          sed "s*WORKSPACE_DIR*$GITHUB_WORKSPACE*g" .ssh/config > $HOME/.ssh/config
          echo "${{ secrets.PRIVATE_KEY }}" > .ssh/private-key
          chmod 400 ./.ssh/private-key
      - name: Setup parallel
        shell: bash
        run: brew install parallel
      - name: Setup bash
        shell: bash
        run: brew install bash
      - uses: ./.github/actions/setup-mrt
      - name: Run E2E Tests
        shell: bash
        run: |
          mrt run detect-platform
          mrt run e2e-tests
  create-release:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: [run-linux-tests, run-darwin-tests]
    outputs:
      upload-url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: ""
          draft: false
          prerelease: false
  release-binaries:
    name: Release binaries for ${{ matrix.platform.name }}
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: [create-release, build-matrix]
    strategy:
      matrix: ${{ fromJson(needs.build-matrix.outputs.build-matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/upload-binaries
        with:
          upload-url: ${{ needs.create-release.outputs.upload-url }}
          binary-name: ${{ matrix.platform.binary-name }}
          binary-path: ${{ matrix.platform.binary-path }}
          github-token: ${{ secrets.RELEASE_GITHUB_TOKEN }}